import os
import logging
from pyrogram import Client, filters
from pyrogram.types import Message

# ‡¶≤‡¶ó‡¶ø‡¶Ç ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ API ‡¶ï‡¶®‡¶´‡¶ø‡¶ó
API_ID = os.environ.get("API_ID", "123456")  # my.telegram.org ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡¶ø‡¶®
API_HASH = os.environ.get("API_HASH", "abcdef12345")  # my.telegram.org ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡¶ø‡¶®
BOT_TOKEN = os.environ.get("BOT_TOKEN", "123:abc")  # @BotFather ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡¶ø‡¶®

# ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ç URL (‡¶≤‡¶æ‡¶á‡¶≠ ‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï ‡¶∏‡ßã‡¶∞‡ßç‡¶∏)
STREAM_URL = "http://stream.radioparadise.com/flac"  # ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶≤‡¶æ‡¶á‡¶≠ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ URL

app = Client(
    "music_stream_bot",
    api_id=API_ID,
    api_hash=API_HASH,
    bot_token=BOT_TOKEN
)

@app.on_message(filters.command(["start", "help"]))
async def start(_, message: Message):
    await message.reply_text(
        "üéµ **‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã! ‡¶Ü‡¶Æ‡¶ø ‡¶≤‡¶æ‡¶á‡¶≠ ‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ç ‡¶¨‡¶ü**\n\n"
        "‚Ä¢ /play - ‡¶≤‡¶æ‡¶á‡¶≠ ‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®\n"
        "‚Ä¢ /stop - ‡¶Æ‡¶ø‡¶â‡¶ú‡¶ø‡¶ï ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®\n"
        "‚Ä¢ /source - ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ ‡¶∏‡ßã‡¶∞‡ßç‡¶∏ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®"
    )

@app.on_message(filters.command("play"))
async def play_music(_, message: Message):
    chat_id = message.chat.id
    try:
        # ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶ú‡ßü‡ßá‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
        await app.send_message(chat_id, "üîä **‡¶≤‡¶æ‡¶á‡¶≠ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...**")
        
        # ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ç ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®
        await app.stream_audio(
            chat_id=chat_id,
            audio_path=STREAM_URL
        )
        await app.send_message(chat_id, "‚úÖ **‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ç ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡ßü‡ßá‡¶õ‡ßá!**")
    except Exception as e:
        await message.reply_text(f"‚ùå ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: {str(e)}")
        logger.error(f"Play error: {e}")

@app.on_message(filters.command("source"))
async def show_source(_, message: Message):
    await message.reply_text(f"üì° **‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ ‡¶∏‡ßã‡¶∞‡ßç‡¶∏:**\n`{STREAM_URL}`")

@app.on_message(filters.command("stop"))
async def stop_music(_, message: Message):
    chat_id = message.chat.id
    try:
        await app.leave_chat(chat_id)
        await message.reply_text("‚èπÔ∏è **‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶Ç ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá**")
    except Exception as e:
        await message.reply_text(f"‚ùå ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø: {str(e)}")
        logger.error(f"Stop error: {e}")

if __name__ == "__main__":
    logger.info("‡¶¨‡¶ü ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡¶≤‡ßã...")
    app.run()
